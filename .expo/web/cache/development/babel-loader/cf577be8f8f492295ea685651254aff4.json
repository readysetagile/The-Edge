{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/Users/bartleby848/Desktop/ReactNative-Dev/App Development/React/The-Edge/The-Edge/src/screens/LoginScreen/LoginScreen.js\";\nimport React, { useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport styles from \"./styles\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var accInfo = {\n    email: null,\n    password: null\n  };\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.logo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }, \"The Edge\"), React.createElement(View, {\n    style: styles.inputView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputText,\n    placeholder: \"Email\",\n    placeholderTextColor: \"#003f5c\",\n    onChangeText: function onChangeText(txt) {\n      return accInfo.email = txt;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: styles.inputView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    style: styles.inputText,\n    placeholder: \"Password\",\n    placeholderTextColor: \"#003f5c\",\n    secureTextEntry: true,\n    onChangeText: function onChangeText(txt) {\n      return accInfo.password = txt;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  })), React.createElement(TouchableOpacity, {\n    onPress: onForgotPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.forgot,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, \"Forgot Password?\")), React.createElement(TouchableOpacity, {\n    onPress: onLogIn,\n    style: styles.loginButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, \"LOGIN\")), React.createElement(TouchableOpacity, {\n    onPress: onCreateAccount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, \"Signup\")));\n\n  function onLogIn() {\n    var data;\n    return _regeneratorRuntime.async(function onLogIn$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(getAccountInfo());\n\n          case 2:\n            data = _context.sent;\n\n            if (data.email === accInfo.email && data.pass === accInfo.password) {\n              Alert.alert(\"Logged in sucessfully!\");\n              navigation.navigate(\"Home\");\n            } else {\n              Alert.alert(\"Could not find this account. Please try again\");\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  function onCreateAccount() {\n    var info;\n    return _regeneratorRuntime.async(function onCreateAccount$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n\n            if (!(accInfo.email != null && accInfo.password != null)) {\n              _context2.next = 15;\n              break;\n            }\n\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(getAccountInfo());\n\n          case 4:\n            info = _context2.sent;\n\n            if (!(info.email != null && accInfo.email === info.email)) {\n              _context2.next = 8;\n              break;\n            }\n\n            Alert.alert(\"Could not create an account as you already have an account under this email\");\n            return _context2.abrupt(\"return\");\n\n          case 8:\n            _context2.next = 10;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"@User:email\", accInfo.email));\n\n          case 10:\n            _context2.next = 12;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem(\"@User:password\", accInfo.password));\n\n          case 12:\n            Alert.alert(\"Account Created!\");\n            _context2.next = 16;\n            break;\n\n          case 15:\n            Alert.alert(\"Please input your email and password\");\n\n          case 16:\n            _context2.next = 21;\n            break;\n\n          case 18:\n            _context2.prev = 18;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.error(_context2.t0);\n\n          case 21:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, [[0, 18]], Promise);\n  }\n\n  function getAccountInfo() {\n    var email, pass;\n    return _regeneratorRuntime.async(function getAccountInfo$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@User:email\"));\n\n          case 3:\n            email = _context3.sent;\n            _context3.next = 6;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem(\"@User:password\"));\n\n          case 6:\n            pass = _context3.sent;\n            return _context3.abrupt(\"return\", {\n              email: email,\n              pass: pass\n            });\n\n          case 10:\n            _context3.prev = 10;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.error(_context3.t0);\n\n          case 13:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, [[0, 10]], Promise);\n  }\n\n  function onForgotPassword() {\n    Alert.alert(\"Sadly, you can't forget your password right now\");\n  }\n}","map":{"version":3,"sources":["/Users/bartleby848/Desktop/ReactNative-Dev/App Development/React/The-Edge/The-Edge/src/screens/LoginScreen/LoginScreen.js"],"names":["React","useState","AsyncStorage","styles","LoginScreen","navigation","accInfo","email","password","container","logo","inputView","inputText","txt","onForgotPassword","forgot","onLogIn","loginButton","loginText","onCreateAccount","getAccountInfo","data","pass","Alert","alert","navigate","info","setItem","console","error","getItem"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {Alert, AsyncStorage, Text, TextInput, TouchableOpacity, View} from 'react-native';\nimport styles from './styles';\n\n\nexport default function LoginScreen ({navigation}) {\n    let accInfo = {\n        email: null,\n        password: null\n    };\n\n    return (\n            <View style={styles.container}>\n                <Text style={styles.logo}>The Edge</Text>\n                <View style={styles.inputView} >\n                    <TextInput\n                        style={styles.inputText}\n                        placeholder=\"Email\"\n                        placeholderTextColor=\"#003f5c\"\n                        onChangeText={txt => accInfo.email = txt} />\n                </View>\n                <View style={styles.inputView} >\n                    <TextInput\n                        style={styles.inputText}\n                        placeholder=\"Password\"\n                        placeholderTextColor=\"#003f5c\"\n                        secureTextEntry\n                        onChangeText={txt => accInfo.password = txt} />\n                </View>\n\n                <TouchableOpacity onPress={onForgotPassword}>\n                    <Text style={styles.forgot}>Forgot Password?</Text>\n                </TouchableOpacity>\n                <TouchableOpacity onPress={onLogIn} style={styles.loginButton}>\n                    <Text style={styles.loginText}>LOGIN</Text>\n                </TouchableOpacity>\n\n                <TouchableOpacity onPress={onCreateAccount}>\n                    <Text style={styles.loginText}>Signup</Text>\n                </TouchableOpacity>\n\n            </View>\n    );\n\n    async function onLogIn () {\n\n        const data = await getAccountInfo();\n        if (data.email === accInfo.email && data.pass === accInfo.password) {\n            Alert.alert(\"Logged in sucessfully!\");\n            navigation.navigate(\"Home\");\n        } else {\n            Alert.alert(\"Could not find this account. Please try again\");\n        }\n\n    }\n    async function onCreateAccount () {\n        try {\n\n            if (accInfo.email != null && accInfo.password != null) {\n\n                const info = await getAccountInfo();\n                if (info.email != null && accInfo.email === info.email) {\n                    Alert.alert(\"Could not create an account as you already have an account under this email\");\n                    return;\n                }\n\n                await AsyncStorage.setItem(\"@User:email\", accInfo.email);\n                await AsyncStorage.setItem(\"@User:password\", accInfo.password);\n                Alert.alert(\"Account Created!\");\n            } else {\n                Alert.alert(\"Please input your email and password\");\n            }\n        } catch (e) {\n            console.error(e);\n        }\n\n    }\n\n    async function getAccountInfo () {\n        try {\n            const email = await AsyncStorage.getItem(\"@User:email\");\n            const pass = await AsyncStorage.getItem(\"@User:password\");\n            return {email: email, pass: pass};\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    function onForgotPassword () {\n        Alert.alert(\"Sadly, you can't forget your password right now\");\n    }\n\n}"]},"metadata":{},"sourceType":"module"}